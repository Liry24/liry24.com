---
import { getAccessToken, getNowPlaying, getPlaylist } from '@/utils/spotify'
import { Icon } from 'astro-icon/components'
import { Image } from 'astro:assets'

const accessToken = await getAccessToken()
const [nowPlaying, playlist] = accessToken
    ? await Promise.all([
          getNowPlaying(accessToken.access_token),
          getPlaylist(accessToken.access_token, '0UO4FhslKPZnIhblzD8HPr'),
      ])
    : [undefined, undefined]

if (import.meta.env.PUBLIC_VERCEL_ENV === 'production') {
    Astro.response.headers.set('Cache-Control', `max-age=${60}`) // 1 minutes
    Astro.response.headers.set('CDN-Cache-Control', `max-age=${60 * 5}`) // 5 minutes
}
---

{
    nowPlaying?.is_playing ? (
        <>
            {nowPlaying?.item.album.images[1].url ? (
                <Image
                    src={nowPlaying.item.album.images[1].url}
                    alt={nowPlaying.item.name}
                    width={64}
                    height={64}
                    class="animate-in fade-in rounded-lg"
                />
            ) : (
                <div class="animate-in fade-in flex h-12 items-center justify-center rounded-lg bg-zinc-800">
                    <Icon
                        name="simple-icons:spotify"
                        size="20"
                        class="shrink-0 text-zinc-800"
                    />
                </div>
            )}

            <div class="animate-in fade-in flex flex-col gap-2">
                <div class="flex items-center gap-1.5 text-green-500">
                    <Icon name="lucide:music" size="14" class="shrink-0" />
                    <span class="text-xs leading-none">Now Playing</span>
                </div>

                <span class="line-clamp-1 text-sm leading-none font-medium">
                    {nowPlaying?.item.name}
                </span>

                <span class="text-xs leading-none text-zinc-400">
                    {nowPlaying?.item.artists[0].name}
                    {nowPlaying?.item.artists.length > 1
                        ? ` + ${nowPlaying.item.artists.length - 1}`
                        : ''}
                </span>
            </div>

            <Icon
                name="simple-icons:spotify"
                size="18"
                class="animate-in fade-in ml-auto shrink-0 self-start text-zinc-500"
            />
        </>
    ) : (
        <>
            {playlist?.images[1].url ? (
                <Image
                    src={playlist.images[1].url}
                    alt={playlist.name}
                    width={64}
                    height={64}
                    class="animate-in fade-in rounded-lg"
                />
            ) : (
                <div class="animate-in fade-in flex h-12 items-center justify-center rounded-lg bg-zinc-800">
                    <Icon
                        name="simple-icons:spotify"
                        size="20"
                        class="shrink-0 text-zinc-800"
                    />
                </div>
            )}

            <div class="animate-in fade-in flex flex-col gap-2">
                <span class="line-clamp-1 text-sm leading-none font-medium tracking-wider">
                    {playlist?.name}
                </span>

                <div class="flex items-center gap-1.5 text-zinc-400">
                    <Icon name="lucide:music" size="14" class="shrink-0" />
                    <span class="text-xs leading-none tracking-wider">
                        {playlist?.tracks.total}
                    </span>
                </div>
            </div>

            <Icon
                name="simple-icons:spotify"
                size="18"
                class="animate-in fade-in ml-auto shrink-0 self-start text-zinc-500"
            />
        </>
    )
}
