---
import { Icon } from 'astro-icon/components'
import { getLiveCollection } from 'astro:content'

const { entries } = await getLiveCollection('articles')

const icons = {
    note: 'note',
    zenn: 'simple-icons:zenn',
}

Astro.response.headers.set('Cache-Control', `max-age=${60 * 60}`) // 1 hours
Astro.response.headers.set('CDN-Cache-Control', `max-age=${60 * 60 * 24}`) // 1 days
---

<div class="grid grid-cols-1 gap-3 md:grid-cols-2">
    {
        entries?.map((post) => (
            <a
                href={post.data.url}
                target="_blank"
                class="group flex flex-col justify-between gap-3 rounded-lg bg-zinc-950 p-4 transition-colors hover:bg-zinc-900 focus-visible:bg-zinc-900"
            >
                <h3 class="text-sm tracking-wider text-zinc-200">
                    {post.data.title}
                </h3>

                <div class="flex items-end justify-between gap-2">
                    <div class="flex items-center gap-3">
                        <span class="text-xs leading-none font-light tracking-widest text-nowrap text-zinc-400">
                            {post.data.publishedAt.toLocaleDateString('ja-JP')}
                        </span>

                        {Boolean(post.data.likes) && (
                            <div class="flex items-center gap-1.5 text-zinc-400">
                                <Icon name="lucide:heart" size="15" />
                                <span class="text-xs leading-none font-light tracking-widest text-nowrap">
                                    {post.data.likes}
                                </span>
                            </div>
                        )}

                        {Boolean(post.data.comments) && (
                            <div class="flex items-center gap-1.5 text-zinc-400">
                                <Icon name="lucide:message-circle" size="15" />
                                <span class="text-xs leading-none font-light tracking-widest text-nowrap">
                                    {post.data.comments}
                                </span>
                            </div>
                        )}
                    </div>
                    <Icon
                        name={icons[post.data.source]}
                        size="18"
                        class="text-zinc-500 transition group-hover:text-zinc-300 group-focus-visible:text-zinc-300"
                    />
                </div>
            </a>
        ))
    }
</div>
